!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
BaseConfig	services/users/project/config.py	/^class BaseConfig:$/;"	c
BaseTestCase	services/users/project/tests/base.py	/^class BaseTestCase(TestCase):$/;"	c
DevelopmentConfig	services/users/project/config.py	/^class DevelopmentConfig(BaseConfig):$/;"	c
ProductionConfig	services/users/project/config.py	/^class ProductionConfig(BaseConfig):$/;"	c
SECRET_KEY	services/users/project/config.py	/^    SECRET_KEY = 'my_precious'$/;"	v	class:BaseConfig
SQLALCHEMY_DATABASE_URI	services/users/project/config.py	/^    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_TEST_URL')$/;"	v	class:TestingConfig
SQLALCHEMY_DATABASE_URI	services/users/project/config.py	/^    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL')$/;"	v	class:DevelopmentConfig
SQLALCHEMY_DATABASE_URI	services/users/project/config.py	/^    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL')$/;"	v	class:ProductionConfig
SQLALCHEMY_TRACK_MODIFICATIONS	services/users/project/config.py	/^    SQLALCHEMY_TRACK_MODIFICATIONS = False$/;"	v	class:BaseConfig
TESTING	services/users/project/config.py	/^    TESTING = False$/;"	v	class:BaseConfig
TESTING	services/users/project/config.py	/^    TESTING = True$/;"	v	class:TestingConfig
TestDevelopmentConfig	services/users/project/tests/test_config.py	/^class TestDevelopmentConfig(TestCase):$/;"	c
TestProductionConfig	services/users/project/tests/test_config.py	/^class TestProductionConfig(TestCase):$/;"	c
TestTestingConfig	services/users/project/tests/test_config.py	/^class TestTestingConfig(TestCase):$/;"	c
TestUserService	services/users/project/tests/test_users.py	/^class TestUserService(BaseTestCase):$/;"	c
TestingConfig	services/users/project/config.py	/^class TestingConfig(BaseConfig):$/;"	c
User	services/users/project/api/models.py	/^class User(db.Model):$/;"	c
Users	services/users/project/api/users.py	/^class Users(Resource):$/;"	c
UsersList	services/users/project/api/users.py	/^class UsersList(Resource):$/;"	c
UsersPing	services/users/project/api/users.py	/^class UsersPing(Resource):$/;"	c
__init__	services/users/project/api/models.py	/^    def __init__(self, username, email):$/;"	m	class:User
__tablename__	services/users/project/api/models.py	/^    __tablename__ = 'users'$/;"	v	class:User	file:
active	services/users/project/api/models.py	/^    active = db.Column(db.Boolean(), default=True, nullable=False)$/;"	v	class:User
add_user	services/users/project/tests/test_users.py	/^def add_user(username, email):$/;"	f
api	services/users/project/api/users.py	/^api = Api(users_blueprint)$/;"	v
app	services/users/manage.py	/^app = create_app()$/;"	v
app	services/users/project/tests/base.py	/^app = create_app()$/;"	v
app	services/users/project/tests/test_config.py	/^app = create_app()$/;"	v
cli	services/users/manage.py	/^cli = FlaskGroup(create_app=create_app)$/;"	v
create_app	services/users/project/__init__.py	/^def create_app(script_info=None):$/;"	f
create_app	services/users/project/tests/base.py	/^    def create_app(self):$/;"	m	class:BaseTestCase
create_app	services/users/project/tests/test_config.py	/^    def create_app(self):$/;"	m	class:TestDevelopmentConfig
create_app	services/users/project/tests/test_config.py	/^    def create_app(self):$/;"	m	class:TestProductionConfig
create_app	services/users/project/tests/test_config.py	/^    def create_app(self):$/;"	m	class:TestTestingConfig
created_date	services/users/project/api/models.py	/^    created_date = db.Column(db.DateTime, default=func.now(), nullable=False)$/;"	v	class:User
ctx	services/users/project/__init__.py	/^    def ctx():$/;"	f	function:create_app	file:
db	services/users/project/__init__.py	/^db = SQLAlchemy()$/;"	v
email	services/users/project/api/models.py	/^    email = db.Column(db.String(128), nullable=False)$/;"	v	class:User
get	services/users/project/api/users.py	/^    def get(self):$/;"	m	class:UsersList
get	services/users/project/api/users.py	/^    def get(self):$/;"	m	class:UsersPing
get	services/users/project/api/users.py	/^    def get(self, user_id):$/;"	m	class:Users
id	services/users/project/api/models.py	/^    id = db.Column(db.Integer, primary_key=True, autoincrement=True)$/;"	v	class:User
post	services/users/project/api/users.py	/^    def post(self):$/;"	m	class:UsersList
recreate_db	services/users/manage.py	/^def recreate_db():$/;"	f
seed_db	services/users/manage.py	/^def seed_db():$/;"	f
setUp	services/users/project/tests/base.py	/^    def setUp(self):$/;"	m	class:BaseTestCase
tearDown	services/users/project/tests/base.py	/^    def tearDown(self):$/;"	m	class:BaseTestCase
test	services/users/manage.py	/^def test():$/;"	f
test_add_user	services/users/project/tests/test_users.py	/^    def test_add_user(self):$/;"	m	class:TestUserService
test_add_user_duplicate_email	services/users/project/tests/test_users.py	/^    def test_add_user_duplicate_email(self):$/;"	m	class:TestUserService
test_add_user_invalid_json	services/users/project/tests/test_users.py	/^    def test_add_user_invalid_json(self):$/;"	m	class:TestUserService
test_add_user_invalid_json_keys	services/users/project/tests/test_users.py	/^    def test_add_user_invalid_json_keys(self):$/;"	m	class:TestUserService
test_all_users	services/users/project/tests/test_users.py	/^    def test_all_users(self):$/;"	m	class:TestUserService
test_app_is_development	services/users/project/tests/test_config.py	/^    def test_app_is_development(self):$/;"	m	class:TestDevelopmentConfig
test_app_is_production	services/users/project/tests/test_config.py	/^    def test_app_is_production(self):$/;"	m	class:TestProductionConfig
test_app_is_testing	services/users/project/tests/test_config.py	/^    def test_app_is_testing(self):$/;"	m	class:TestTestingConfig
test_single_user	services/users/project/tests/test_users.py	/^    def test_single_user(self):$/;"	m	class:TestUserService
test_single_user_incorrect_id	services/users/project/tests/test_users.py	/^    def test_single_user_incorrect_id(self):$/;"	m	class:TestUserService
test_single_user_no_id	services/users/project/tests/test_users.py	/^    def test_single_user_no_id(self):$/;"	m	class:TestUserService
test_users	services/users/project/tests/test_users.py	/^    def test_users(self):$/;"	m	class:TestUserService
testdriven-app	README.md	/^# testdriven-app$/;"	c
to_json	services/users/project/api/models.py	/^    def to_json(self):$/;"	m	class:User
username	services/users/project/api/models.py	/^    username = db.Column(db.String(128), nullable=False)$/;"	v	class:User
users_blueprint	services/users/project/api/users.py	/^users_blueprint = Blueprint('users', __name__)$/;"	v
